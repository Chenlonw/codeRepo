/* This file is automatically generated. DO NOT EDIT! */

#ifndef _chlwang_h
#define _chlwang_h

void *alloc1 (size_t n1, size_t size);
/*< allocate a 1-d array >*/


void *realloc1(void *v, size_t n1, size_t size);
/*< re-allocate a 1-d array >*/


void free1 (void *p);
/*< free a 1-d array >*/


void **alloc2 (size_t n1, size_t n2, size_t size);
/*< allocate a 2-d array >*/


void free2 (void **p);
/*< free a 2-d array >*/


void ***alloc3 (size_t n1, size_t n2, size_t n3, size_t size);
/*< allocate a 3-d array >*/


void free3 (void ***p);
/*< free a 3-d array >*/


void ****alloc4 (size_t n1, size_t n2, size_t n3, size_t n4, size_t size);
/*< allocate a 4-d array >*/


void free4 (void ****p);
/*< free a 4-d array >*/


int *alloc1int(size_t n1);
/*< allocate a 1-d array of ints >*/


int *realloc1int(int *v, size_t n1);
/*< re-allocate a 1-d array of ints >*/


void free1int(int *p);
/*< free a 1-d array of ints >*/


/* n1: fast dimension; n2: slow dimension */
int **alloc2int(size_t n1, size_t n2);
/*< allocate a 2-d array of ints >*/


void free2int(int **p);
/*< free a 2-d array of ints >*/


int ***alloc3int(size_t n1, size_t n2, size_t n3);
/*< allocate a 3-d array of ints >*/


void free3int(int ***p);
/*< free a 3-d array of ints >*/


float *alloc1float(size_t n1);
/*< allocate a 1-d array of floats >*/


float *realloc1float(float *v, size_t n1);
/*< re-allocate a 1-d array of floats >*/


void free1float(float *p);
/*< free a 1-d array of floats >*/


/* allocate a 2-d array of floats */
float **alloc2float(size_t n1, size_t n2);
/*<  n1: fast dimension; n2: slow dimension >*/


void free2float(float **p);
/*< free a 2-d array of floats >*/


float ***alloc3float(size_t n1, size_t n2, size_t n3);
/*< allocate a 3-d array of floats >*/


void free3float(float ***p);
/*< free a 3-d array of floats >*/


float ****alloc4float(size_t n1, size_t n2, size_t n3, size_t n4);
/*< allocate a 4-d array of floats, added by Zhaobo Meng, 1997 >*/


void free4float(float ****p);
/*< free a 4-d array of floats, added by Zhaobo Meng, 1997 >*/


int ****alloc4int(size_t n1, size_t n2, size_t n3, size_t n4);
/*< allocate a 4-d array of ints, added by Zhaobo Meng, 1997 >*/


void free4int(int ****p);
/*< free a 4-d array of ints, added by Zhaobo Meng, 1997 >*/


unsigned char ****alloc4uchar(size_t n1, size_t n2, size_t n3, size_t n4);
/*< allocate a 4-d array of chars, added by Cheng Jiubing >*/


void free4uchar(unsigned char ****p);
/*< free a 4-d array of chars, added by Cheng Jiubing >*/


unsigned char ***alloc3uchar(size_t n1, size_t n2, size_t n3);
/*< allocate a 3-d array of chars, added by Cheng Jiubing >*/


void free3uchar(unsigned char ***p);
/*< free a 3-d array of chars, added by Cheng Jiubing >*/


unsigned char **alloc2uchar(size_t n1, size_t n2);
/*< allocate a 2-d array of chars, added by Cheng Jiubing >*/


void free2uchar(unsigned char **p);
/*< free a 2-d array of chars, added by Cheng Jiubing >*/


char **alloc2char(size_t n1, size_t n2);
/*< allocate a 2-d array of chars, added by Cheng Jiubing >*/


void free2char(char **p);
/*< free a 2-d array of chars, added by Cheng Jiubing >*/


unsigned char *alloc1uchar(size_t n1);
/*< allocate a 1-d array of chars, added by Cheng Jiubing >*/


void free1uchar(unsigned char *p);
/*< free a 1-d array of chars, added by Cheng Jiubing >*/


unsigned short ***alloc3ushort(size_t n1, size_t n2, size_t n3);
/*< allocate a 3-d array of ints, added by Meng, 1997 >*/


unsigned short **alloc2ushort(size_t n1, size_t n2);
/*< allocate a 2-d array of ints, added by Meng, 1997 >*/


void free3ushort(unsigned short ***p);
/*< free a 3-d array of shorts, added by Zhaobo Meng, 1997 >*/


void free2ushort(unsigned short **p);
/*< free a 2-d array of shorts, added by Zhaobo Meng, 1997 >*/


double *alloc1double(size_t n1);
/*< allocate a 1-d array of doubles >*/


double *realloc1double(double *v, size_t n1);
/*< re-allocate a 1-d array of doubles >*/


void free1double(double *p);
/*< free a 1-d array of doubles >*/


double **alloc2double(size_t n1, size_t n2);
/*< allocate a 2-d array of doubles >*/


void free2double(double **p);
/*< free a 2-d array of doubles >*/


double ***alloc3double(size_t n1, size_t n2, size_t n3);
/*< allocate a 3-d array of doubles >*/


void free3double(double ***p);
/*< free a 3-d array of doubles >*/


void *alloc1 (size_t n1, size_t size);
/*< allocate a 1-d array >*/


void *realloc1(void *v, size_t n1, size_t size);
/*< re-allocate a 1-d array >*/


void free1 (void *p);
/*< free a 1-d array >*/


void **alloc2 (size_t n1, size_t n2, size_t size);
/*< allocate a 2-d array >*/


void free2 (void **p);
/*< free a 2-d array >*/


void ***alloc3 (size_t n1, size_t n2, size_t n3, size_t size);
/*< allocate a 3-d array >*/


void free3 (void ***p);
/*< free a 3-d array >*/


void ****alloc4 (size_t n1, size_t n2, size_t n3, size_t n4, size_t size);
/*< allocate a 4-d array >*/


void free4 (void ****p);
/*< free a 4-d array >*/


int *alloc1int(size_t n1);
/*< allocate a 1-d array of ints >*/


int *realloc1int(int *v, size_t n1);
/*< re-allocate a 1-d array of ints >*/


void free1int(int *p);
/*< free a 1-d array of ints >*/


/* n1: fast dimension; n2: slow dimension */
int **alloc2int(size_t n1, size_t n2);
/*< allocate a 2-d array of ints >*/


void free2int(int **p);
/*< free a 2-d array of ints >*/


int ***alloc3int(size_t n1, size_t n2, size_t n3);
/*< allocate a 3-d array of ints >*/


void free3int(int ***p);
/*< free a 3-d array of ints >*/


float *alloc1float(size_t n1);
/*< allocate a 1-d array of floats >*/


float *realloc1float(float *v, size_t n1);
/*< re-allocate a 1-d array of floats >*/


void free1float(float *p);
/*< free a 1-d array of floats >*/


/* allocate a 2-d array of floats */
float **alloc2float(size_t n1, size_t n2);
/*<  n1: fast dimension; n2: slow dimension >*/


void free2float(float **p);
/*< free a 2-d array of floats >*/


float ***alloc3float(size_t n1, size_t n2, size_t n3);
/*< allocate a 3-d array of floats >*/


void free3float(float ***p);
/*< free a 3-d array of floats >*/


float ****alloc4float(size_t n1, size_t n2, size_t n3, size_t n4);
/*< allocate a 4-d array of floats, added by Zhaobo Meng, 1997 >*/


void free4float(float ****p);
/*< free a 4-d array of floats, added by Zhaobo Meng, 1997 >*/


int ****alloc4int(size_t n1, size_t n2, size_t n3, size_t n4);
/*< allocate a 4-d array of ints, added by Zhaobo Meng, 1997 >*/


void free4int(int ****p);
/*< free a 4-d array of ints, added by Zhaobo Meng, 1997 >*/


unsigned char ****alloc4uchar(size_t n1, size_t n2, size_t n3, size_t n4);
/*< allocate a 4-d array of chars, added by Cheng Jiubing >*/


void free4uchar(unsigned char ****p);
/*< free a 4-d array of chars, added by Cheng Jiubing >*/


unsigned char ***alloc3uchar(size_t n1, size_t n2, size_t n3);
/*< allocate a 3-d array of chars, added by Cheng Jiubing >*/


void free3uchar(unsigned char ***p);
/*< free a 3-d array of chars, added by Cheng Jiubing >*/


unsigned char **alloc2uchar(size_t n1, size_t n2);
/*< allocate a 2-d array of chars, added by Cheng Jiubing >*/


void free2uchar(unsigned char **p);
/*< free a 2-d array of chars, added by Cheng Jiubing >*/


char **alloc2char(size_t n1, size_t n2);
/*< allocate a 2-d array of chars, added by Cheng Jiubing >*/


void free2char(char **p);
/*< free a 2-d array of chars, added by Cheng Jiubing >*/


unsigned char *alloc1uchar(size_t n1);
/*< allocate a 1-d array of chars, added by Cheng Jiubing >*/


void free1uchar(unsigned char *p);
/*< free a 1-d array of chars, added by Cheng Jiubing >*/


unsigned short ***alloc3ushort(size_t n1, size_t n2, size_t n3);
/*< allocate a 3-d array of ints, added by Meng, 1997 >*/


unsigned short **alloc2ushort(size_t n1, size_t n2);
/*< allocate a 2-d array of ints, added by Meng, 1997 >*/


void free3ushort(unsigned short ***p);
/*< free a 3-d array of shorts, added by Zhaobo Meng, 1997 >*/


void free2ushort(unsigned short **p);
/*< free a 2-d array of shorts, added by Zhaobo Meng, 1997 >*/


double *alloc1double(size_t n1);
/*< allocate a 1-d array of doubles >*/


double *realloc1double(double *v, size_t n1);
/*< re-allocate a 1-d array of doubles >*/


void free1double(double *p);
/*< free a 1-d array of doubles >*/


void utils_print_title(const char *title);
/*<Printing out program title to terminal.>*/

#endif 
